{"version":3,"sources":["components/SwipeButton/index.jsx","i18n.js","App.js","reportWebVitals.js","index.js"],"names":["SwipeButton","Box","style","width","height","background","border","margin","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","lng","debug","interpolation","escapeValue","Journey","React","lazy","App","I18nextProvider","exact","path","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PASeA,EANK,kBACnB,cAACC,EAAA,EAAD,CAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAAQC,WAAY,WAAzD,SACC,cAACJ,EAAA,EAAD,CAAKC,MAAO,CAAEC,MAAO,OAAQE,WAAY,UAAWD,OAAQ,OAAQE,OAAQ,kBAAmBC,OAAQ,Y,gCCIzGC,IAIGC,IAAIC,KAGJD,IAAIE,KAEJF,IAAIG,KAGJC,KAAK,CACJC,YAAa,QACbC,IAAI,QACJC,OAAO,EAEPC,cAAe,CACbC,aAAa,KAKJV,QAAf,E,SCpBMW,EAAUC,IAAMC,MAAK,kBAAM,uDA8BlBC,MA7Bf,WACC,OACC,cAACC,EAAA,EAAD,CAAiBf,KAAMA,EAAvB,SACC,cAAC,IAAD,UACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,IAAlB,SACC,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACC,cAACP,EAAD,QAGF,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,SAAlB,SACC,cAAC,EAAD,MAED,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,uBAAlB,SACC,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACC,cAACP,EAAD,gB,QChBQQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCCdQ,EAASC,OACR,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAMzBb,M","file":"static/js/main.74c3aea0.chunk.js","sourcesContent":["import { Box } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst SwipeButton = () => (\r\n\t<Box style={{ width: '100%', height: '64px', background: '#FEF1F5' }}>\r\n\t\t<Box style={{ width: '64px', background: '#EEF1F5', height: '100%', border: \"solid black 1px\", margin: '8px' }}></Box>\r\n\t</Box>\r\n);\r\n\r\nexport default SwipeButton;\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n// don't want to use this?\r\n// have a look at the Quick start guide \r\n// for passing in lng and translations on init\r\n\r\ni18n\r\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  // want your translations to be loaded from a professional CDN? => https://github.com/locize/react-tutorial#step-2---use-the-locize-cdn\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    fallbackLng: 'en-US',\r\n    lng:'en-US',\r\n    debug: true,\r\n\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    }\r\n  });\r\n\r\n\r\nexport default i18n;","import 'roboto-fontface/css/roboto/roboto-fontface.css';\r\nimport './App.css';\r\n\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport React from 'react';\r\n// import Hierarchy from './components/Hierarchy';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport SwipeButton from \"./components/SwipeButton\";\r\nimport { Suspense } from 'react';\r\nimport i18n from './i18n';\r\nimport { I18nextProvider } from 'react-i18next';\r\nconst Journey = React.lazy(() => import('./Journey'));\r\nfunction App() {\r\n\treturn (\r\n\t\t<I18nextProvider i18n={i18n}>\r\n\t\t\t<Router>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path='/'>\r\n\t\t\t\t\t\t<Suspense fallback={<div>Loading...</div>}>\r\n\t\t\t\t\t\t\t<Journey />\r\n\t\t\t\t\t\t</Suspense>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route exact path='/swipe'>\r\n\t\t\t\t\t\t<SwipeButton />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route exact path='/journey/:type/:step'>\r\n\t\t\t\t\t\t<Suspense fallback={<div>Loading...</div>}>\r\n\t\t\t\t\t\t\t<Journey />\r\n\t\t\t\t\t\t</Suspense>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t</Switch>\r\n\t\t\t\t{/* <Switch>\r\n\t\t\t\t<Route path='/hierarchy' exact>\r\n\t\t\t\t\t<Hierarchy />\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch> */}\r\n\t\t\t</Router>\r\n\t\t</I18nextProvider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import './index.css';\r\n\r\nimport App from './App';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\n// import './i18n';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}