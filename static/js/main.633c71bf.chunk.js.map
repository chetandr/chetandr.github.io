{"version":3,"sources":["components/MediaStream/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["DebugData","props","components","debugData","key","push","className","MediaStream","videoRef","React","useRef","canvasRef","imageCanvasRef","downloadAnchor","useState","mediaSettings","setMediaSettings","setDebugData","getMedia","a","stream","navigator","mediaDevices","getUserMedia","audio","video","facingMode","exact","getVideoTracks","videoTracks","videoTrack","capabilities","getCapabilities","settings","getSettings","console","log","constraints","width","ideal","max","height","applyConstraints","alert","updatedSettings","error","useEffect","media","current","srcObject","src","window","URL","createObjectURL","video_width","video_height","to_height","document","documentElement","clientHeight","to_width","aspectRatio","scaleRatioY","scaleRatioX","getContext","transform","newDebugData","innerWidth","innerHeight","target","scale","paint","requestAnimationFrame","ctx","restore","to_wdth","ratio","drawImage","id","style","marginBottom","ref","autoPlay","playsInline","onLoadedMetadata","e","border","display","href","IconButton","color","aria-label","component","variant","onClick","target_width","y_of_video","x_of_video","url","toDataURL","download","click","revokeObjectURL","fontSize","App","path","DndProvider","backend","TouchBackend","options","enableMouseEvents","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wSAMMA,EAAY,SAACC,GAClB,IAAMC,EAAa,GACnB,GAAID,EAAME,UACT,IAAK,IAAIC,KAAOH,EAAME,UACrBD,EAAWG,KACV,sBAAKC,UAAU,WAAf,UACC,uBAAMA,UAAU,aAAhB,UAA8BF,EAA9B,SACA,sBAAME,UAAU,aAAhB,SAA8BL,EAAME,UAAUC,SAMlD,OAAOF,GAmROK,EAhRK,WACnB,IACMC,EAAWC,IAAMC,SACjBC,EAAYF,IAAMC,SAClBE,EAAiBH,IAAMC,SAEvBG,EAAiBJ,IAAMC,SAC7B,EAA0CD,IAAMK,SAAS,IAAzD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAkCP,IAAMK,SAAS,IAAjD,mBAAOX,EAAP,KAAkBc,EAAlB,KARyB,SAUVC,IAVU,2EAUzB,wCAAAC,EAAA,6DACKC,EAAS,KADd,2BAKkBC,UAAUC,aAAaC,aAAa,CAClDC,OAAO,EACPC,MAAO,CAAEC,WAAY,CAAEC,MAAO,kBAPlC,OAKGP,EALH,wEAUkBC,UAAUC,aAAaC,aAAa,CAClDC,OAAO,EACPC,MAAO,CAAEC,WAAY,CAAEC,MAAO,WAZlC,QAUGP,EAVH,gCAgB4BA,EAAOQ,iBAhBnC,eAgBQC,EAhBR,OAiBQC,EAAaD,EAAY,GACzBE,EAAeF,EAAY,GAAGG,kBAC9BC,EAAWH,EAAWI,cAC5BC,QAAQC,IAAIL,EAAcE,GACpBI,EAAc,CACnBC,MAAO,CAAEC,MAAOR,EAAaO,MAAME,KACnCC,OAAQ,CAAEF,MAAOR,EAAaU,OAAOD,MAvBxC,oBA0BSV,EAAWY,iBAAiBL,GA1BrC,2DA4BGM,MAAM,EAAD,IA5BR,eA8BQC,EAAkBd,EAAWI,cACnClB,EAAiB4B,GA/BnB,kBAgCS,CAAExB,SAAQa,SAAUW,IAhC7B,kCAmCET,QAAQU,MAAR,MAnCF,yEAVyB,sBAkDzBC,oBAAS,sBAAC,0CAAA3B,EAAA,sEACWD,IADX,OACH6B,EADG,OAELvC,EAASwC,UACR,cAAexC,EAASwC,QAC3BxC,EAASwC,QAAQC,UAAYF,EAAM3B,OAInCZ,EAAS0C,IAAMC,OAAOC,IAAIC,gBAAgBN,EAAM3B,QAK3CkC,EAAcP,EAAMd,SAASK,MAC7BiB,EAAeR,EAAMd,SAASQ,OAC9Be,EAAYC,SAASC,gBAAgBC,aACrCC,EAAWJ,EAAYT,EAAMd,SAAS4B,YAC9B9C,EAAc8C,YACtBC,EAAcN,EAAYD,EAC1BQ,EAAcH,EAAWN,EAE/B3C,EAAUqC,QAAQV,MAAQgB,EAC1B3C,EAAUqC,QAAQP,OAASc,EAI3B3C,EAAeoC,QAAQV,MAAQgB,EAC/B1C,EAAeoC,QAAQP,OAASc,EAGpB5C,EAAUqC,QAAQgB,WAAW,MACrCC,UAAUF,EAAa,EAAG,EAAGD,EAAa,EAAG,GAEpClD,EAAeoC,QAAQgB,WAAW,MAC1CC,UAAUF,EAAa,EAAG,EAAGD,EAAa,EAAG,GAE5CI,EAAe,CACpBnB,MAAM,GAAD,OAAKA,EAAMd,SAASK,MAApB,YAA6BS,EAAMd,SAASQ,QACjDhB,MAAM,GAAD,OAAKsB,EAAMd,SAASK,MAApB,YAA6BS,EAAMd,SAASQ,QACjDU,OAAO,GAAD,OAAKA,OAAOgB,WAAZ,YAA0BhB,OAAOiB,aACvCC,OAAO,GAAD,OAAKT,EAAL,YAAiBJ,GAEvBc,MAAM,GAAD,OAAKP,EAAL,YAAoBD,IAE1B7C,EAAaiD,IA5CL,2CAkDP,CAAC1D,EAAUG,EAAWC,IAEzB,IAAM2D,EAAQ,SAARA,IACLC,sBAAsBD,GACtB,IAAME,EAAM9D,EAAUqC,QAAQgB,WAAW,MACzCS,EAAIC,UACJ,IAAMpB,EAAcvC,EAAcuB,MAC5BiB,EAAexC,EAAc0B,OAC7Be,EAAYC,SAASC,gBAAgBC,aACrCgB,EAAUnB,EAAYzC,EAAc8C,YACpCe,EAAQ7D,EAAc8C,YACtBE,EAAcY,EAAUrB,EACxBQ,EAAcN,EAAYD,EAK5BD,EAAcC,GAGHA,EADEoB,EAAUC,GACoB,GAKhCrB,EADEC,EAAYoB,GACkB,EAK/CJ,uBAAsB,kBAAMC,EAAII,UAAUrE,EAASwC,QAAS,EAAG,MAC/D,IAAMkB,EAAe,CACpBnB,MAAM,GAAD,OAAKhC,EAAcuB,MAAnB,YAA4BvB,EAAc0B,QAC/ChB,MAAM,GAAD,OAAKV,EAAcuB,MAAnB,YAA4BvB,EAAc0B,QAC/CU,OAAO,GAAD,OAAKA,OAAOgB,WAAZ,YAA0BhB,OAAOiB,aACvCC,OAAO,GAAD,OAAKM,EAAL,YAAgBnB,GAEtBc,MAAM,GAAD,OAAKP,EAAL,YAAoBD,IAE1B7C,EAAaiD,IA8Ed,OACC,gCAEE,qBAAKY,GAAG,QAAR,SACC,cAAC,EAAD,CAAW3E,UAAWA,MAGxB,qBAAK4E,MAAO,CAAEC,aAAc,QAA5B,SACC,uBACCC,IAAKzE,EACL0E,UAAQ,EACRC,aAAW,EACXC,iBArFuB,SAACC,GAG3Bd,SAsFC,gCACC,wBAAQU,IAAKtE,EAAWoE,MAAO,CAAEO,OAAQ,mBACzC,wBAAQL,IAAKrE,EAAgBmE,MAAO,CAAEO,OAAQ,gBAAiBC,QAAS,aAEzE,mBAAGT,GAAG,iBAAiBU,KAAK,6BAA6BP,IAAKpE,EAAgBkE,MAAO,CAAEQ,QAAS,QAAhG,mBAGA,qBAAKT,GAAG,cAAR,SACC,cAACW,EAAA,EAAD,CACCC,MAAM,UACNC,aAAW,iBACXC,UAAU,OACVC,QAAQ,YAERC,QA9EiB,WACpB,IASIC,EATEtB,EAAM7D,EAAeoC,QAAQgB,WAAW,MAExCV,EAAc,KACdC,EAAe,KAGfqB,EAAQ7D,EAAc8C,YAKxBmC,EAAa,EACbC,EAAa,EAMhBF,EAAepF,EAAUqC,QAAQP,OACjB9B,EAAUqC,QAAQP,OAClCwD,GAActF,EAAUqC,QAAQV,MAAQyD,GAAgB,EAWxDE,GAAc1C,EA1BG,IAyBWqB,GACkB,EAC9CoB,GAAc1C,GAHdyC,EAxBiB,MA2B2B,EAI7CtB,EAAII,UAAUrE,EAASwC,QAASiD,EAAYD,GAE5C,IAAME,EAAMtF,EAAeoC,QAAQmD,UAAU,aAE7CtF,EAAemC,QAAQwC,KAAOU,EAC9BrF,EAAemC,QAAQoD,SAAW,cAClCvF,EAAemC,QAAQqD,QAEvBlD,OAAOC,IAAIkD,gBAAgBJ,IA2BzB,SAQC,cAAC,IAAD,CAAanB,MAAO,CAAEwB,SAAU,WAgBlC,mBAAGzB,GAAG,iBAAiBU,KAAK,6BAA6BP,IAAKpE,EAAgBkE,MAAO,CAAEQ,QAAS,QAAhG,uB,gBC9PYiB,MAvBf,WACC,OACC,cAAC,IAAD,UACC,cAAC,IAAD,UACC,cAAC,IAAD,CAAO7E,OAAK,EAAC8E,KAAK,IAAlB,SACC,qBAAKnG,UAAU,MAAf,SACC,wBAAQA,UAAU,aAAlB,SACC,cAACoG,EAAA,EAAD,CAAaC,QAASC,IAAcC,QAAS,CAAEC,mBAAmB,GAAlE,SACC,cAAC,EAAD,iB,QCNOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,EAASC,OACR,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjE,SAASkE,eAAe,SAMzBZ,M","file":"static/js/main.633c71bf.chunk.js","sourcesContent":["import React, { useCallback, useEffect } from 'react';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport SettingsOverscanIcon from '@material-ui/icons/SettingsOverscan';\r\n\r\nconst DebugData = (props) => {\r\n\tconst components = [];\r\n\tif (props.debugData) {\r\n\t\tfor (let key in props.debugData) {\r\n\t\t\tcomponents.push(\r\n\t\t\t\t<div className='debugRow'>\r\n\t\t\t\t\t<span className='debugLabel'>{key} : </span>\r\n\t\t\t\t\t<span className='debugValue'>{props.debugData[key]}</span>\r\n\t\t\t\t</div>,\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\treturn components;\r\n};\r\n\r\nconst MediaStream = () => {\r\n\tconst debug = true;\r\n\tconst videoRef = React.useRef();\r\n\tconst canvasRef = React.useRef();\r\n\tconst imageCanvasRef = React.useRef();\r\n\r\n\tconst downloadAnchor = React.useRef();\r\n\tconst [mediaSettings, setMediaSettings] = React.useState({});\r\n\tconst [debugData, setDebugData] = React.useState({});\r\n\r\n\tasync function getMedia() {\r\n\t\tlet stream = null;\r\n\r\n\t\ttry {\r\n\t\t\ttry {\r\n\t\t\t\tstream = await navigator.mediaDevices.getUserMedia({\r\n\t\t\t\t\taudio: false,\r\n\t\t\t\t\tvideo: { facingMode: { exact: 'environment' } },\r\n\t\t\t\t});\r\n\t\t\t} catch (err) {\r\n\t\t\t\tstream = await navigator.mediaDevices.getUserMedia({\r\n\t\t\t\t\taudio: false,\r\n\t\t\t\t\tvideo: { facingMode: { exact: 'user' } },\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tconst videoTracks = await stream.getVideoTracks();\r\n\t\t\tconst videoTrack = videoTracks[0];\r\n\t\t\tconst capabilities = videoTracks[0].getCapabilities();\r\n\t\t\tconst settings = videoTrack.getSettings();\r\n\t\t\tconsole.log(capabilities, settings);\r\n\t\t\tconst constraints = {\r\n\t\t\t\twidth: { ideal: capabilities.width.max },\r\n\t\t\t\theight: { ideal: capabilities.height.max },\r\n\t\t\t};\r\n\t\t\ttry {\r\n\t\t\t\tawait videoTrack.applyConstraints(constraints);\r\n\t\t\t} catch (e) {\r\n\t\t\t\talert(e);\r\n\t\t\t}\r\n\t\t\tconst updatedSettings = videoTrack.getSettings();\r\n\t\t\tsetMediaSettings(updatedSettings);\r\n\t\t\treturn { stream, settings: updatedSettings };\r\n\t\t\t/* use the stream */\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t\t/* handle the error */\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(async () => {\r\n\t\tconst media = await getMedia();\r\n\t\tif (videoRef.current) {\r\n\t\t\tif ('srcObject' in videoRef.current) {\r\n\t\t\t\tvideoRef.current.srcObject = media.stream;\r\n\r\n\t\t\t\t// ctx.scale(widthRatio, heightRatio);\r\n\t\t\t} else {\r\n\t\t\t\tvideoRef.src = window.URL.createObjectURL(media.stream);\r\n\t\t\t}\r\n\t\t\t// videoRef.current.width = media.settings.width;\r\n\t\t\t// videoRef.current.height = media.settings.height;\r\n\t\t\t// console.log\r\n\t\t\tconst video_width = media.settings.width;\r\n\t\t\tconst video_height = media.settings.height;\r\n\t\t\tconst to_height = document.documentElement.clientHeight; //window.innerHeight;\r\n\t\t\tconst to_width = to_height * media.settings.aspectRatio; //906; //document.documentElement.clientWidth; //window.innerWidth;\r\n\t\t\tconst ratio = mediaSettings.aspectRatio;\r\n\t\t\tconst scaleRatioY = to_height / video_height;\r\n\t\t\tconst scaleRatioX = to_width / video_width;\r\n\t\t\t// videoRef.current.style.transform = `scale(${scaleRatioX}, ${scaleRatioY})`; \r\n\t\t\tcanvasRef.current.width = video_width; //media.settings.width; //window.innerWidth;\r\n\t\t\tcanvasRef.current.height = video_height; //media.settings.height; //window.innerHeight;\r\n\t\t\t// canvasRef.current.style.width = `${480 * media.settings.aspectRatio}px`;\r\n\t\t\t// canvasRef.current.style.height = `${'480'}px`; //window.innerHeight;\r\n\t\t\t// canvasRef.current.style.transform = `scale(${scaleRatioX}, ${scaleRatioY})`; //window.innerHeight;\r\n\t\t\timageCanvasRef.current.width = video_width; //media.settings.width; //window.innerWidth;\r\n\t\t\timageCanvasRef.current.height = video_height; //media.settings.height; //window.innerHeight;\r\n\t\t\t// imageCanvasRef.current.style.width = `${window.innerWidth}px`;\r\n\t\t\t// imageCanvasRef.current.style.height = `${window.innerHeight}px`;\r\n\t\t\tconst ctx = canvasRef.current.getContext('2d');\r\n\t\t\tctx.transform(scaleRatioX, 0, 0, scaleRatioY, 0, 0)\r\n\t\t\t// ctx.scale(scaleRatioX, scaleRatioY);\r\n\t\t\tconst ctxi = imageCanvasRef.current.getContext('2d');\r\n\t\t\tctxi.transform(scaleRatioX, 0, 0, scaleRatioY, 0, 0);\r\n\t\t\t// ctxi.scale(scaleRatioX, scaleRatioY);\r\n\t\t\tconst newDebugData = {\r\n\t\t\t\tmedia: `${media.settings.width}x${media.settings.height}`,\r\n\t\t\t\tvideo: `${media.settings.width}x${media.settings.height}`,\r\n\t\t\t\twindow: `${window.innerWidth}x${window.innerHeight}`,\r\n\t\t\t\ttarget: `${to_width}x${to_height}`,\r\n\t\t\t\t// coords: `${x_of_video}x${y_of_video}`,\r\n\t\t\t\tscale: `${scaleRatioX}:${scaleRatioY}`,\r\n\t\t\t};\r\n\t\t\tsetDebugData(newDebugData);\r\n\r\n\t\t\t// const heightRatio = window.innerHeight / media.settings.height;\r\n\t\t\t// const widthRatio = window.innerWidth / media.settings.width;\r\n\t\t\t// const ctx = canvasRef.current.getContext('2d');\r\n\t\t}\r\n\t}, [videoRef, canvasRef, imageCanvasRef]);\r\n\r\n\tconst paint = () => {\r\n\t\trequestAnimationFrame(paint);\r\n\t\tconst ctx = canvasRef.current.getContext('2d');\r\n\t\tctx.restore();\r\n\t\tconst video_width = mediaSettings.width;\r\n\t\tconst video_height = mediaSettings.height;\r\n\t\tconst to_height = document.documentElement.clientHeight; //window.innerHeight;\r\n\t\tconst to_wdth = to_height * mediaSettings.aspectRatio; //document.documentElement.clientWidth; //window.innerWidth;\r\n\t\tconst ratio = mediaSettings.aspectRatio;\r\n\t\tconst scaleRatioX = to_wdth / video_width;\r\n\t\tconst scaleRatioY = to_height / video_height;\r\n\t\tlet target_width;\r\n\t\tlet target_height;\r\n\t\tlet y_of_video = 0;\r\n\t\tlet x_of_video = 0;\r\n\t\tif (video_width > video_height) {\r\n\t\t\ttarget_width = to_wdth;\r\n\t\t\ttarget_height = to_wdth / ratio;\r\n\t\t\ty_of_video = (video_height - target_height) / 2;\r\n\t\t\tx_of_video = (video_width - target_width) / 2;\r\n\t\t} else {\r\n\t\t\ttarget_width = to_height;\r\n\t\t\ttarget_height = to_height * ratio;\r\n\t\t\tx_of_video = (video_height - target_height) / 2;\r\n\t\t\ty_of_video = (video_width - target_width) / 2;\r\n\t\t}\r\n\r\n\t\t// ctx.scale(scaleRatioX, scaleRatioY);\r\n\t\trequestAnimationFrame(() => ctx.drawImage(videoRef.current, 0, 0));\r\n\t\tconst newDebugData = {\r\n\t\t\tmedia: `${mediaSettings.width}x${mediaSettings.height}`,\r\n\t\t\tvideo: `${mediaSettings.width}x${mediaSettings.height}`,\r\n\t\t\twindow: `${window.innerWidth}x${window.innerHeight}`,\r\n\t\t\ttarget: `${to_wdth}x${to_height}`,\r\n\t\t\t// coords: `${x_of_video}x${y_of_video}`,\r\n\t\t\tscale: `${scaleRatioX}:${scaleRatioY}`,\r\n\t\t};\r\n\t\tsetDebugData(newDebugData);\r\n\t\t// requestAnimationFrame(() => ctx.scale(scaleRatioX, scaleRatioY));\r\n\t\t// requestAnimationFrame(() => ctx.restore());\r\n\t\t// ctx.scale(scaleRatioX, scaleRatioY);\r\n\t};\r\n\tconst metaDataLoadHandle = (e) => {\r\n\t\t// alert(`${mediaSettings.width}x${mediaSettings.height}`);\r\n\r\n\t\tpaint();\r\n\t\t// setDebugData(newDebugData);\r\n\t\t// setInterval(() => {\r\n\t\t// \t// console.log(videoRef.current.videoWidth, videoRef.current.videoWidth, window.innerWidth, window.innerHeight);\r\n\r\n\t\t// \t// requestAnimationFrame(() => ctx.drawImage(videoRef.current, x_of_video, y_of_video));\r\n\r\n\t\t// \t// ctx.drawImage(\r\n\t\t// \t// \tvideoRef.current,\r\n\t\t// \t// \t0,\r\n\t\t// \t// \t0,\r\n\t\t// \t// \tvideoRef.current.videoWidth,\r\n\t\t// \t// \tvideoRef.current.videoWidth,\r\n\t\t// \t// \t0,\r\n\t\t// \t// \t0,\r\n\t\t// \t// \twindow.innerWidth,\r\n\t\t// \t// \twindow.innerHeight,\r\n\t\t// \t// );\r\n\t\t// }, 30);\r\n\t\t// ctx.drawImage(videoRef.current, 0, 0, mediaSettings.width, mediaSettings.height);\r\n\t};\r\n\r\n\tconst captureImage = () => {\r\n\t\tconst ctx = imageCanvasRef.current.getContext('2d');\r\n\r\n\t\tconst video_width = 3456; //mediaSettings.width;\r\n\t\tconst video_height = 3456; //mediaSettings.height;\r\n\t\tconst to_wdth = 906; //document.documentElement.clientWidth; //window.innerWidth;\r\n\t\tconst to_height = 367; //document.documentElement.clientHeight; //window.innerHeight;\r\n\t\tconst ratio = mediaSettings.aspectRatio;\r\n\t\tconst scaleRatioX = to_wdth / video_width;\r\n\t\tconst scaleRatioY = to_height / video_height;\r\n\t\tlet target_width;\r\n\t\tlet target_height;\r\n\t\tlet y_of_video = 0;\r\n\t\tlet x_of_video = 0;\r\n\t\tif (video_width > video_height) {\r\n\t\t\ttarget_width = canvasRef.current.width;\r\n\t\t\ttarget_height = canvasRef.current.width / ratio;\r\n\t\t\ty_of_video = (canvasRef.current.height - target_height) / 2;\r\n\t\t} else {\r\n\t\t\ttarget_width = canvasRef.current.height;\r\n\t\t\ttarget_height = canvasRef.current.height * ratio;\r\n\t\t\tx_of_video = (canvasRef.current.width - target_width) / 2;\r\n\t\t}\r\n\t\t// ctx.drawImage(videoRef.current, x_of_video, y_of_video, target_width, target_height);\r\n\t\tif (video_width > video_height) {\r\n\t\t\ttarget_width = to_wdth;\r\n\t\t\ttarget_height = to_wdth / ratio;\r\n\t\t\ty_of_video = (video_height - target_height) / 2;\r\n\t\t\tx_of_video = (video_width - target_width) / 2;\r\n\t\t} else {\r\n\t\t\ttarget_width = to_height;\r\n\t\t\ttarget_height = to_height * ratio;\r\n\t\t\tx_of_video = (video_height - target_height) / 2;\r\n\t\t\ty_of_video = (video_width - target_width) / 2;\r\n\t\t}\r\n\r\n\t\t// ctx.scale(scaleRatioX, scaleRatioY);\r\n\t\tctx.drawImage(videoRef.current, x_of_video, y_of_video);\r\n\r\n\t\tconst url = imageCanvasRef.current.toDataURL('image/png');\r\n\t\t// photo.current.setAttribute('src', url);\r\n\t\tdownloadAnchor.current.href = url;\r\n\t\tdownloadAnchor.current.download = 'MyPhoto.png';\r\n\t\tdownloadAnchor.current.click();\r\n\t\t//\r\n\t\twindow.URL.revokeObjectURL(url);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{debug && (\r\n\t\t\t\t<div id='debug'>\r\n\t\t\t\t\t<DebugData debugData={debugData} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<div style={{ marginBottom: '16px',  }}>\r\n\t\t\t\t<video\r\n\t\t\t\t\tref={videoRef}\r\n\t\t\t\t\tautoPlay\r\n\t\t\t\t\tplaysInline\r\n\t\t\t\t\tonLoadedMetadata={metaDataLoadHandle}\r\n\t\t\t\t\t// style={{ display: 'none' }}\r\n\t\t\t\t></video>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<canvas ref={canvasRef} style={{ border: 'solid 2px red' }}></canvas>\r\n\t\t\t\t<canvas ref={imageCanvasRef} style={{ border: 'solid 2px red', display: 'none' }}></canvas>\r\n\t\t\t</div>\r\n\t\t\t<a id='downloadAnchor' href='http://chetandr.github.com' ref={downloadAnchor} style={{ display: 'none' }}>\r\n\t\t\t\timage\r\n\t\t\t</a>\r\n\t\t\t<div id='changeVideo'>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\taria-label='upload picture'\r\n\t\t\t\t\tcomponent='span'\r\n\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t// ref={snap}\r\n\t\t\t\t\tonClick={captureImage}\r\n\t\t\t\t>\r\n\t\t\t\t\t<PhotoCamera style={{ fontSize: 100 }} />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div>\r\n\t\t\t{/* <div id='additionalButtons'>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tcolor='secondary'\r\n\t\t\t\t\taria-label='upload picture'\r\n\t\t\t\t\tcomponent='span'\r\n\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\tref={snap}\r\n\t\t\t\t\tonClick={addBBox}\r\n\t\t\t\t\tdisabled={bboxCount >= allowedBBoxes}\r\n\t\t\t\t>\r\n\t\t\t\t\t<SettingsOverscanIcon style={{ fontSize: 100 }} />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div> */}\r\n\t\t\t<a id='downloadAnchor' href='http://chetandr.github.com' ref={downloadAnchor} style={{ display: 'none' }}>\r\n\t\t\t\timage\r\n\t\t\t</a>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MediaStream;\r\n","import './App.css';\n\nimport { Route, Switch, useLocation, useParams } from 'react-router-dom';\n\nimport { DndProvider } from 'react-dnd';\n// import Hierarchy from './components/Hierarchy';\nimport MediaStream from './components/MediaStream';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { TouchBackend } from 'react-dnd-touch-backend';\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path='/'>\n\t\t\t\t\t<div className='App'>\n\t\t\t\t\t\t<header className='App-header'>\n\t\t\t\t\t\t\t<DndProvider backend={TouchBackend} options={{ enableMouseEvents: true }}>\n\t\t\t\t\t\t\t\t<MediaStream />\n\t\t\t\t\t\t\t</DndProvider>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t</div>\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t\t{/* <Switch>\n\t\t\t\t<Route path='/hierarchy' exact>\n\t\t\t\t\t<Hierarchy />\n\t\t\t\t</Route>\n\t\t\t</Switch> */}\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\r\n\r\nimport App from './App';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}