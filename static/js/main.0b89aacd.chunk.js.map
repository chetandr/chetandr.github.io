{"version":3,"sources":["components/MediaStream/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["MediaStream","videoRef","React","useRef","canvasRef","downloadAnchor","useState","mediaSettings","setMediaSettings","getMedia","a","stream","navigator","mediaDevices","getUserMedia","audio","video","facingMode","exact","getVideoTracks","videoTracks","videoTrack","capabilities","getCapabilities","settings","getSettings","console","log","constraints","width","max","height","applyConstraints","updatedSettings","error","useEffect","media","current","srcObject","window","innerWidth","innerHeight","heightRatio","widthRatio","getContext","scale","src","URL","createObjectURL","ref","autoPlay","playsInline","onLoadedMetadata","e","readyState","ctx","setInterval","drawImage","style","display","id","href","IconButton","color","aria-label","component","variant","onClick","url","toDataURL","download","click","revokeObjectURL","fontSize","App","DndProvider","backend","TouchBackend","options","enableMouseEvents","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b89aacd.chunk.js","sourcesContent":["import React, { useCallback, useEffect } from 'react';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport SettingsOverscanIcon from '@material-ui/icons/SettingsOverscan';\r\n\r\nconst MediaStream = () => {\r\n\tconst videoRef = React.useRef();\r\n\tconst canvasRef = React.useRef();\r\n\tconst downloadAnchor = React.useRef();\r\n\tconst [mediaSettings, setMediaSettings] = React.useState({});\r\n\r\n\tasync function getMedia() {\r\n\t\tlet stream = null;\r\n\r\n\t\ttry {\r\n\t\t\ttry {\r\n\t\t\t\tstream = await navigator.mediaDevices.getUserMedia({\r\n\t\t\t\t\taudio: false,\r\n\t\t\t\t\tvideo: { facingMode: { exact: 'environment' } },\r\n\t\t\t\t});\r\n\t\t\t} catch (err) {\r\n\t\t\t\tstream = await navigator.mediaDevices.getUserMedia({\r\n\t\t\t\t\taudio: false,\r\n\t\t\t\t\tvideo: { facingMode: { exact: 'user' } },\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tconst videoTracks = await stream.getVideoTracks();\r\n\t\t\tconst videoTrack = videoTracks[0];\r\n\t\t\tconst capabilities = videoTracks[0].getCapabilities();\r\n\t\t\tconst settings = videoTrack.getSettings();\r\n\t\t\tconsole.log(capabilities, settings);\r\n\t\t\tconst constraints = {\r\n\t\t\t\twidth: { exact: capabilities.width.max },\r\n\t\t\t\theight: { exact: capabilities.height.max },\r\n\t\t\t};\r\n\t\t\tvideoTrack.applyConstraints(constraints);\r\n\t\t\tconst updatedSettings = videoTrack.getSettings();\r\n\t\t\tsetMediaSettings(updatedSettings);\r\n\t\t\treturn { stream, settings: updatedSettings };\r\n\t\t\t/* use the stream */\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t\t/* handle the error */\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(async () => {\r\n\t\tconst media = await getMedia();\r\n\t\tconsole.log(media.settings);\r\n\t\tif (videoRef.current) {\r\n\t\t\tif ('srcObject' in videoRef.current) {\r\n\t\t\t\tvideoRef.current.width = media.settings.width;\r\n\t\t\t\tvideoRef.current.height = media.settings.height;\r\n\t\t\t\tvideoRef.current.srcObject = media.stream;\r\n\t\t\t\tcanvasRef.current.width = window.innerWidth;\r\n\t\t\t\tcanvasRef.current.height = window.innerHeight;\r\n\t\t\t\tconst heightRatio = window.innerHeight / media.settings.height;\r\n\t\t\t\tconst widthRatio = window.innerWidth / media.settings.width;\r\n\t\t\t\tconst ctx = canvasRef.current.getContext('2d');\r\n\t\t\t\tctx.scale(widthRatio, heightRatio);\r\n\t\t\t} else {\r\n\t\t\t\tvideoRef.src = window.URL.createObjectURL(media.stream);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [videoRef, canvasRef]);\r\n\tconst metaDataLoadHandle = (e) => {\r\n\t\tconsole.log('loaded', videoRef.current.readyState);\r\n\t\tconst ctx = canvasRef.current.getContext('2d');\r\n\t\tsetInterval(() => {\r\n\t\t\tctx.drawImage(videoRef.current, 0, 0, mediaSettings.width, mediaSettings.height);\r\n\t\t}, 30);\r\n\t};\r\n\r\n\tconst captureImage = () => {\r\n\t\tconst url = canvasRef.current.toDataURL('image/png');\r\n\t\t// photo.current.setAttribute('src', url);\r\n\t\tdownloadAnchor.current.href = url;\r\n\t\tdownloadAnchor.current.download = 'MyPhoto.png';\r\n\t\tdownloadAnchor.current.click();\r\n\t\t//\r\n\t\twindow.URL.revokeObjectURL(url);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<video\r\n\t\t\t\tref={videoRef}\r\n\t\t\t\tautoPlay\r\n\t\t\t\tplaysInline\r\n\t\t\t\tonLoadedMetadata={metaDataLoadHandle}\r\n\t\t\t\tstyle={{ display: 'none' }}\r\n\t\t\t></video>\r\n\t\t\t<canvas ref={canvasRef}></canvas>\r\n\t\t\t<a id='downloadAnchor' href='http://chetandr.github.com' ref={downloadAnchor} style={{ display: 'none' }}>\r\n\t\t\t\timage\r\n\t\t\t</a>\r\n\t\t\t<div id='changeVideo'>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\taria-label='upload picture'\r\n\t\t\t\t\tcomponent='span'\r\n\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t// ref={snap}\r\n\t\t\t\t\tonClick={captureImage}\r\n\t\t\t\t>\r\n\t\t\t\t\t<PhotoCamera style={{ fontSize: 100 }} />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div>\r\n\t\t\t{/* <div id='additionalButtons'>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tcolor='secondary'\r\n\t\t\t\t\taria-label='upload picture'\r\n\t\t\t\t\tcomponent='span'\r\n\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\tref={snap}\r\n\t\t\t\t\tonClick={addBBox}\r\n\t\t\t\t\tdisabled={bboxCount >= allowedBBoxes}\r\n\t\t\t\t>\r\n\t\t\t\t\t<SettingsOverscanIcon style={{ fontSize: 100 }} />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div> */}\r\n\t\t\t<a id='downloadAnchor' href='http://chetandr.github.com' ref={downloadAnchor} style={{display: 'none'}}>\r\n\t\t\t\timage\r\n\t\t\t</a>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MediaStream;\r\n","import './App.css';\n\nimport { DndProvider } from 'react-dnd';\nimport MediaStream from './components/MediaStream';\nimport { TouchBackend } from 'react-dnd-touch-backend';\n\nfunction App() {\n\treturn (\n\t\t<DndProvider backend={TouchBackend} options={{ enableMouseEvents: true }}>\n\t\t\t<div className='App'>\n\t\t\t\t<header className='App-header'>\n\t\t\t\t\t<MediaStream />\n\t\t\t\t</header>\n\t\t\t</div>\n\t\t</DndProvider>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}