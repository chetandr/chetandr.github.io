{"version":3,"sources":["components/MediaStream/helper.js","components/DebugData/index.jsx","components/MediaStream/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["getReso","width","height","getMedia","a","stream","navigator","mediaDevices","getUserMedia","audio","video","facingMode","exact","getVideoTracks","videoTracks","videoTrack","getCapabilities","getSettings","reso","platform","indexOf","constraints","ideal","applyConstraints","alert","updatedSettings","settings","console","error","DebugData","props","components","debugData","key","push","className","MediaStream","videoRef","React","useRef","videoWrapper","canvasRef","imageCanvasRef","downloadAnchor","useState","mediaSettings","setMediaSettings","setDebugData","capturing","setCapturing","renderMedia","useCallback","media","current","srcObject","src","window","URL","createObjectURL","video_width","video_height","to_width","innerWidth","to_height","Math","floor","aspectRatio","scaleRatioY","scaleRatioX","to_x","to_y","ceil","style","transform","offsetLeft","offsetTop","transformOrigin","newDebugData","scale","target","targetXY","addEventListener","event","useEffect","paint","requestAnimationFrame","ctx","getContext","drawImage","id","ref","marginBottom","position","top","left","display","autoPlay","playsInline","onLoadedMetadata","e","videoWidth","availWidth","availHeight","innerHeight","border","href","IconButton","color","aria-label","component","variant","onClick","url","toDataURL","download","click","revokeObjectURL","setTimeout","CircularProgress","thinkness","size","fontSize","App","path","DndProvider","backend","TouchBackend","options","enableMouseEvents","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab2f0aad.chunk.js","sourcesContent":["export const getReso = (width, height) => {\r\n\tswitch (`${width}x${height}`) {\r\n\t\tcase '4032x3024':\r\n\t\t\treturn 'DCI 4K (iCAM 12MP)';\r\n\t\tcase '3840x2160':\r\n\t\t\treturn '4K (iCAM 12MP)';\r\n\t\tcase '4096x2160':\r\n\t\t\treturn 'DCI 4K';\r\n\t\tcase '3840x2160':\r\n\t\t\treturn '4K';\r\n\t\tcase '2048x1152':\r\n\t\t\treturn '2K';\r\n\t\tcase '1920x1080':\r\n\t\t\treturn 'Full HD';\r\n\t\tcase '1280x720':\r\n\t\t\treturn 'HD';\r\n\t\tcase '640x480':\r\n\t\t\treturn 'SD';\r\n\t\tdefault:\r\n\t\t\tswitch (width) {\r\n\t\t\t\tcase 4032:\r\n\t\t\t\t\treturn 'DCI 4K';\r\n\t\t\t\tcase 3840:\r\n\t\t\t\t\treturn '4K';\r\n\t\t\t\tcase 2048:\r\n\t\t\t\t\treturn '2K';\r\n\t\t\t\tcase 1920:\r\n\t\t\t\t\treturn 'Full HD';\r\n\t\t\t\tcase 1280:\r\n\t\t\t\t\treturn 'HD';\r\n\t\t\t\tcase 640:\r\n\t\t\t\t\treturn 'HD';\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn 'Non SD';\r\n\t\t\t}\r\n\t}\r\n};\r\n\r\nexport async function getMedia() {\r\n    let stream = null;\r\n\r\n    try {\r\n        try {\r\n            stream = await navigator.mediaDevices.getUserMedia({\r\n                audio: false,\r\n                video: { facingMode: { exact: 'environment' } },\r\n            });\r\n        } catch (err) {\r\n            stream = await navigator.mediaDevices.getUserMedia({\r\n                audio: false,\r\n                video: { facingMode: { exact: 'user' } },\r\n            });\r\n        }\r\n\r\n        const videoTracks = await stream.getVideoTracks();\r\n        const videoTrack = videoTracks[0];\r\n        const capabilities = videoTracks[0].getCapabilities();\r\n        const settings = videoTrack.getSettings();\r\n        let reso = '';\r\n        if (navigator.platform.indexOf('Mac') > -1) {\r\n            try {\r\n                // DCI 4K - iCam 12 MP\r\n                reso = 'DCI 4K';\r\n                const constraints = {\r\n                    width: { ideal: 4032 },\r\n                    height: { ideal: 3024 },\r\n                };\r\n                await videoTrack.applyConstraints(constraints);\r\n            } catch (e) {\r\n                try {\r\n                    // UHD - iCam 8 MP\r\n                    reso = 'DCI 4K';\r\n                    const constraints = {\r\n                        width: { ideal: 3840 },\r\n                        height: { ideal: 2160 },\r\n                    };\r\n                    await videoTrack.applyConstraints(constraints);\r\n                } catch (e) {\r\n                    try {\r\n                        // UHD - iCam 8 MP\r\n                        reso = 'DCI 4K';\r\n                        const constraints = {\r\n                            width: { ideal: 3840 },\r\n                            height: { ideal: 2160 },\r\n                        };\r\n                        await videoTrack.applyConstraints(constraints);\r\n                    } catch (e) {\r\n                        try {\r\n                            // Full HD\r\n                            reso = 'Full HD';\r\n                            const constraints = {\r\n                                width: { ideal: 1920 },\r\n                                height: { ideal: 1080 },\r\n                            };\r\n                            await videoTrack.applyConstraints(constraints);\r\n                        } catch (e) {\r\n                            try {\r\n                                // HD\r\n                                reso = 'HD';\r\n\r\n                                const constraints = {\r\n                                    width: { ideal: 1280 },\r\n                                    height: { ideal: 720 },\r\n                                };\r\n                                await videoTrack.applyConstraints(constraints);\r\n                            } catch (e) {\r\n                                try {\r\n                                    // HD\r\n                                    reso = 'SD';\r\n                                    const constraints = {\r\n                                        width: { ideal: 640 },\r\n                                        height: { ideal: 480 },\r\n                                    };\r\n                                    await videoTrack.applyConstraints(constraints);\r\n                                } catch (e) {\r\n                                    alert(e);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            try {\r\n                // DCI 4K\r\n                reso = 'DCI 4K';\r\n                const constraints = {\r\n                    width: { ideal: 4096 },\r\n                    height: { ideal: 2160 },\r\n                };\r\n                await videoTrack.applyConstraints(constraints);\r\n            } catch (e) {\r\n                try {\r\n                    // UHD\r\n                    reso = 'UHD';\r\n                    const constraints = {\r\n                        width: { ideal: 3840 },\r\n                        height: { ideal: 2160 },\r\n                    };\r\n                    await videoTrack.applyConstraints(constraints);\r\n                } catch (e) {\r\n                    try {\r\n                        // 2K\r\n                        reso = '2K';\r\n                        const constraints = {\r\n                            width: { ideal: 2048 },\r\n                            height: { ideal: 1152 },\r\n                        };\r\n                        await videoTrack.applyConstraints(constraints);\r\n                    } catch (e) {\r\n                        try {\r\n                            // Full HD\r\n                            reso = 'Full HD';\r\n                            const constraints = {\r\n                                width: { ideal: 1920 },\r\n                                height: { ideal: 1080 },\r\n                            };\r\n                            await videoTrack.applyConstraints(constraints);\r\n                        } catch (e) {\r\n                            try {\r\n                                // HD\r\n                                reso = 'HD';\r\n\r\n                                const constraints = {\r\n                                    width: { ideal: 1280 },\r\n                                    height: { ideal: 720 },\r\n                                };\r\n                                await videoTrack.applyConstraints(constraints);\r\n                            } catch (e) {\r\n                                try {\r\n                                    // HD\r\n                                    reso = 'SD';\r\n                                    const constraints = {\r\n                                        width: { ideal: 640 },\r\n                                        height: { ideal: 480 },\r\n                                    };\r\n                                    await videoTrack.applyConstraints(constraints);\r\n                                } catch (e) {\r\n                                    alert(e);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        const updatedSettings = videoTrack.getSettings();\r\n        updatedSettings.reso = reso;\r\n        return { stream, settings: updatedSettings, reso: reso };\r\n        /* use the stream */\r\n    } catch (err) {\r\n        console.error(err);\r\n        /* handle the error */\r\n    }\r\n}\r\n","const DebugData = (props) => {\r\n\tconst components = [];\r\n\tif (props.debugData) {\r\n\t\tfor (let key in props.debugData) {\r\n\t\t\tcomponents.push(\r\n\t\t\t\t<div className='debugRow'>\r\n\t\t\t\t\t<span className='debugLabel'>{key} : </span>\r\n\t\t\t\t\t<span className='debugValue'>{props.debugData[key]}</span>\r\n\t\t\t\t</div>,\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\treturn components;\r\n};\r\n\r\nexport default DebugData;","import React, { useCallback, useEffect } from 'react';\r\nimport { getMedia, getReso } from './helper';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport DebugData from '../DebugData';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport SettingsOverscanIcon from '@material-ui/icons/SettingsOverscan';\r\n\r\nconst MediaStream = () => {\r\n\tconst debug = true;\r\n\tconst videoRef = React.useRef();\r\n\tconst videoWrapper = React.useRef();\r\n\r\n\tconst canvasRef = React.useRef();\r\n\tconst imageCanvasRef = React.useRef();\r\n\r\n\tconst downloadAnchor = React.useRef();\r\n\tconst [mediaSettings, setMediaSettings] = React.useState({});\r\n\tconst [debugData, setDebugData] = React.useState({});\r\n\tconst [capturing, setCapturing] = React.useState(false);\r\n\t\r\n\r\n\tconst renderMedia = React.useCallback(async ()=>{\r\n\t\tconst media = await getMedia();\r\n\t\tif (videoRef.current) {\r\n\t\t\tif ('srcObject' in videoRef.current) {\r\n\t\t\t\tvideoRef.current.srcObject = media.stream;\r\n\t\t\t} else {\r\n\t\t\t\tvideoRef.src = window.URL.createObjectURL(media.stream);\r\n\t\t\t}\r\n\t\t\tsetMediaSettings(media.settings);\r\n\t\t\tconst video_width = media.settings.width;\r\n\t\t\tconst video_height = media.settings.height;\r\n\t\t\tconst to_width = window.innerWidth;\r\n\t\t\tconst to_height = Math.floor((to_width * video_height) / video_width); //window.innerHeight;\r\n\t\t\tconst ratio = media.settings.aspectRatio;\r\n\t\t\tconst scaleRatioY = to_height / video_height;\r\n\t\t\tconst scaleRatioX = to_width / video_width;\r\n\t\t\tlet to_x = 0;\r\n\t\t\tlet to_y = 0;\r\n\t\t\tif (video_width > to_width) {\r\n\t\t\t\tto_x = -Math.ceil(scaleRatioX * 100);\r\n\t\t\t\tto_y = -Math.ceil(scaleRatioY * 100);\r\n\t\t\t} else {\r\n\t\t\t\tto_x = -Math.ceil((video_width / to_width) * 100);\r\n\t\t\t\tto_y = -Math.ceil((video_height / to_height) * 100);\r\n\t\t\t}\r\n\r\n\t\t\t// if (to_width > video_width) {\r\n\t\t\t// \tto_x = (video_width - to_width) * scaleRatioX;\r\n\t\t\t// \t// to_y = to_x / (scaleRatioY * ratio);\r\n\t\t\t// } else {\r\n\t\t\t// \tto_x = (to_width - video_width) * (video_width/(to_width * 100));\r\n\t\t\t// \tto_y = (to_height - video_height) * (video_height/(to_height * 100));\r\n\r\n\t\t\t// }\r\n\t\t\t// if (to_width < video_width) {\r\n\t\t\t// \tto_x = (to_width - video_width) / 2;\r\n\t\t\t// \tto_y = to_x / (scaleRatioY * ratio);\r\n\t\t\t// }\r\n\t\t\tvideoWrapper.current.style.width = `${to_width}px`;\r\n\t\t\tvideoWrapper.current.style.height = `${to_height}px`;\r\n\t\t\tvideoRef.current.width = video_width;\r\n\t\t\tvideoRef.current.height = video_height;\r\n\t\t\tcanvasRef.current.width = to_width;\r\n\t\t\tcanvasRef.current.height = to_height;\r\n\r\n\t\t\tvideoRef.current.style.transform = `translate(${-videoRef.current.offsetLeft}px, ${-videoRef.current\r\n\t\t\t\t.offsetTop}px) scale(${scaleRatioX}, ${scaleRatioY})`;\r\n\t\t\tvideoRef.current.style.transformOrigin = 'top left';\r\n\t\t\timageCanvasRef.current.width = video_width; //media.settings.width; //window.innerWidth;\r\n\t\t\timageCanvasRef.current.height = video_height; //media.settings.height; //window.innerHeight;\r\n\t\t\timageCanvasRef.current.style.width = `${to_width}px`;\r\n\t\t\timageCanvasRef.current.style.height = `${to_height}px`;\r\n\t\t\tconst newDebugData = {\r\n\t\t\t\tvideo: `${video_width} x ${video_height} (${getReso(video_width, video_height)})`,\r\n\t\t\t\tscale: `${scaleRatioX} x ${scaleRatioY}`,\r\n\t\t\t\tmedia: `${media.settings.width} x ${media.settings.height}`,\r\n\t\t\t\ttarget: `${to_width} x ${to_height}`,\r\n\t\t\t\ttargetXY: `${to_x} x ${to_y}`,\r\n\t\t\t};\r\n\t\t\tsetDebugData(newDebugData);\r\n\t\t}\r\n\t}, [videoRef, videoWrapper, canvasRef, imageCanvasRef])\r\n\twindow.addEventListener('orientationchange', function (event) {\r\n\t\trenderMedia();\r\n\t});\r\n\tuseEffect(async () => {\r\n\t\trenderMedia();\r\n\t}, [videoRef, videoWrapper, canvasRef, imageCanvasRef]);\r\n\r\n\tconst captureImage = () => {\r\n\t\tconst ctx = imageCanvasRef.current.getContext('2d');\r\n\t\tsetCapturing(true);\r\n\t\t// ctx.scale(scaleRatioX, scaleRatioY);\r\n\t\tctx.drawImage(videoRef.current, 0, 0);\r\n\r\n\t\tconst url = imageCanvasRef.current.toDataURL('image/png');\r\n\t\t// photo.current.setAttribute('src', url);\r\n\t\tdownloadAnchor.current.href = url;\r\n\t\tdownloadAnchor.current.download = 'MyPhoto.png';\r\n\t\tdownloadAnchor.current.click();\r\n\t\t//\r\n\t\twindow.URL.revokeObjectURL(url);\r\n\t\tsetTimeout(() => setCapturing(false), 3000);\r\n\t};\r\n\r\n\tconst paint = () => {\r\n\t\trequestAnimationFrame(paint);\r\n\t\tconst ctx = canvasRef.current.getContext('2d');\r\n\t\tconst video_width = mediaSettings.width;\r\n\t\tconst video_height = mediaSettings.height;\r\n\t\tconst to_width = window.innerWidth;\r\n\t\tconst to_height = Math.floor((to_width * video_height) / video_width); //window.innerHeight;\r\n\t\tvar ratio = video_width / video_height;\r\n\t\tvar target_width;\r\n\t\tvar target_height;\r\n\t\tvar y_of_video = 0;\r\n\t\tvar x_of_video = 0;\r\n\t\t// if (video_width > video_height) {\r\n\t\t// \ttarget_width = canvasRef.current.width;\r\n\t\t// \ttarget_height = canvasRef.current.width / ratio;\r\n\t\t// \ty_of_video = (canvasRef.current.height - target_height) / 2;\r\n\t\t// } else {\r\n\t\t// \ttarget_width = canvasRef.current.height;\r\n\t\t// \ttarget_height = canvasRef.current.height * ratio;\r\n\t\t// \tx_of_video = (canvasRef.current.width - target_width) / 2;\r\n\t\t// }\r\n\t\tctx.drawImage(videoRef.current, 0, 0, to_width, to_height);\r\n\t};\r\n\tconst metaDataLoadHandle = (e) => {\r\n\t\t// alert(`${mediaSettings.width}x${mediaSettings.height}`);\r\n\t\tconst newDebugData = {\r\n\t\t\tmedia: `${mediaSettings.width}x${mediaSettings.height}`,\r\n\t\t\tvideo: `${videoRef.current.videoWidth}x${videoRef.current.videoWidth}`,\r\n\t\t\tavail: `${window.availWidth}x${window.availHeight}`,\r\n\t\t\twindow: `${window.innerWidth}x${window.innerHeight}`,\r\n\t\t};\r\n\t\tpaint();\r\n\t\t// setDebugData(newDebugData);\r\n\t\t// setInterval(() => {\r\n\t\t// \t// console.log(videoRef.current.videoWidth, videoRef.current.videoWidth, window.innerWidth, window.innerHeight);\r\n\r\n\t\t// \t// requestAnimationFrame(() => ctx.drawImage(videoRef.current, x_of_video, y_of_video));\r\n\r\n\t\t// \t// ctx.drawImage(\r\n\t\t// \t// \tvideoRef.current,\r\n\t\t// \t// \t0,\r\n\t\t// \t// \t0,\r\n\t\t// \t// \tvideoRef.current.videoWidth,\r\n\t\t// \t// \tvideoRef.current.videoWidth,\r\n\t\t// \t// \t0,\r\n\t\t// \t// \t0,\r\n\t\t// \t// \twindow.innerWidth,\r\n\t\t// \t// \twindow.innerHeight,\r\n\t\t// \t// );\r\n\t\t// }, 30);\r\n\t\t// ctx.drawImage(videoRef.current, 0, 0, mediaSettings.width, mediaSettings.height);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{debug && (\r\n\t\t\t\t<div id='debug'>\r\n\t\t\t\t\t<DebugData debugData={debugData} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<div\r\n\t\t\t\tref={videoWrapper}\r\n\t\t\t\tstyle={{ marginBottom: '16px', position: 'absolute', top: '0px', left: '0px', display: 'none' }}\r\n\t\t\t>\r\n\t\t\t\t<video\r\n\t\t\t\t\tref={videoRef}\r\n\t\t\t\t\tid='camvideo'\r\n\t\t\t\t\tautoPlay\r\n\t\t\t\t\tplaysInline\r\n\t\t\t\t\tonLoadedMetadata={metaDataLoadHandle}\r\n\t\t\t\t\t// style={{ display: 'none' }}\r\n\t\t\t\t></video>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<canvas ref={canvasRef} style={{ border: 'solid 2px red' }}></canvas>\r\n\t\t\t\t<canvas ref={imageCanvasRef} style={{ border: 'solid 2px red', display: 'none' }}></canvas>\r\n\t\t\t</div>\r\n\t\t\t<a id='downloadAnchor' href='http://chetandr.github.com' ref={downloadAnchor} style={{ display: 'none' }}>\r\n\t\t\t\timage\r\n\t\t\t</a>\r\n\t\t\t<div id='changeVideo'>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\taria-label='upload picture'\r\n\t\t\t\t\tcomponent='span'\r\n\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t// ref={snap}\r\n\t\t\t\t\tonClick={captureImage}\r\n\t\t\t\t>\r\n\t\t\t\t\t{capturing ? (\r\n\t\t\t\t\t\t<CircularProgress color='secondary' thinkness={7} size={100} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<PhotoCamera style={{ fontSize: 100 }} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div>\r\n\t\t\t{/* <div id='additionalButtons'>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tcolor='secondary'\r\n\t\t\t\t\taria-label='upload picture'\r\n\t\t\t\t\tcomponent='span'\r\n\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\tref={snap}\r\n\t\t\t\t\tonClick={addBBox}\r\n\t\t\t\t\tdisabled={bboxCount >= allowedBBoxes}\r\n\t\t\t\t>\r\n\t\t\t\t\t<SettingsOverscanIcon style={{ fontSize: 100 }} />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div> */}\r\n\t\t\t<a id='downloadAnchor' href='http://chetandr.github.com' ref={downloadAnchor} style={{ display: 'none' }}>\r\n\t\t\t\timage\r\n\t\t\t</a>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MediaStream;\r\n","import './App.css';\n\nimport { Route, Switch, useLocation, useParams } from 'react-router-dom';\n\nimport { DndProvider } from 'react-dnd';\n// import Hierarchy from './components/Hierarchy';\nimport MediaStream from './components/MediaStream';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { TouchBackend } from 'react-dnd-touch-backend';\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path='/'>\n\t\t\t\t\t<div >\n\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t<DndProvider backend={TouchBackend} options={{ enableMouseEvents: true }}>\n\t\t\t\t\t\t\t\t<MediaStream />\n\t\t\t\t\t\t\t</DndProvider>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t</div>\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t\t{/* <Switch>\n\t\t\t\t<Route path='/hierarchy' exact>\n\t\t\t\t\t<Hierarchy />\n\t\t\t\t</Route>\n\t\t\t</Switch> */}\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\r\n\r\nimport App from './App';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}