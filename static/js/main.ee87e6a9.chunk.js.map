{"version":3,"sources":["components/MediaStream/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["DebugData","props","components","debugData","key","push","className","MediaStream","videoRef","React","useRef","videoWrapper","canvasRef","imageCanvasRef","downloadAnchor","useState","mediaSettings","setMediaSettings","setDebugData","getMedia","a","stream","navigator","mediaDevices","getUserMedia","audio","video","facingMode","exact","getVideoTracks","videoTracks","videoTrack","capabilities","getCapabilities","settings","getSettings","console","log","constraints","width","ideal","height","applyConstraints","alert","updatedSettings","error","useEffect","media","current","srcObject","src","window","URL","createObjectURL","video_width","video_height","to_height","document","documentElement","clientHeight","to_width","Math","floor","aspectRatio","scaleRatioY","scaleRatioX","style","transform","transformOrigin","newDebugData","scale","target","id","ref","marginBottom","autoPlay","playsInline","onLoadedMetadata","e","border","display","href","IconButton","color","aria-label","component","variant","onClick","getContext","drawImage","url","toDataURL","download","click","revokeObjectURL","fontSize","App","path","DndProvider","backend","TouchBackend","options","enableMouseEvents","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ee87e6a9.chunk.js","sourcesContent":["import React, { useCallback, useEffect } from 'react';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport SettingsOverscanIcon from '@material-ui/icons/SettingsOverscan';\r\n\r\nconst DebugData = (props) => {\r\n\tconst components = [];\r\n\tif (props.debugData) {\r\n\t\tfor (let key in props.debugData) {\r\n\t\t\tcomponents.push(\r\n\t\t\t\t<div className='debugRow'>\r\n\t\t\t\t\t<span className='debugLabel'>{key} : </span>\r\n\t\t\t\t\t<span className='debugValue'>{props.debugData[key]}</span>\r\n\t\t\t\t</div>,\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\treturn components;\r\n};\r\n\r\nconst MediaStream = () => {\r\n\tconst debug = true;\r\n\tconst videoRef = React.useRef();\r\n\tconst videoWrapper = React.useRef();\r\n\r\n\tconst canvasRef = React.useRef();\r\n\tconst imageCanvasRef = React.useRef();\r\n\r\n\tconst downloadAnchor = React.useRef();\r\n\tconst [mediaSettings, setMediaSettings] = React.useState({});\r\n\tconst [debugData, setDebugData] = React.useState({});\r\n\r\n\tasync function getMedia() {\r\n\t\tlet stream = null;\r\n\r\n\t\ttry {\r\n\t\t\ttry {\r\n\t\t\t\tstream = await navigator.mediaDevices.getUserMedia({\r\n\t\t\t\t\taudio: false,\r\n\t\t\t\t\tvideo: { facingMode: { exact: 'environment' } },\r\n\t\t\t\t});\r\n\t\t\t} catch (err) {\r\n\t\t\t\tstream = await navigator.mediaDevices.getUserMedia({\r\n\t\t\t\t\taudio: false,\r\n\t\t\t\t\tvideo: { facingMode: { exact: 'user' } },\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tconst videoTracks = await stream.getVideoTracks();\r\n\t\t\tconst videoTrack = videoTracks[0];\r\n\t\t\tconst capabilities = videoTracks[0].getCapabilities();\r\n\t\t\tconst settings = videoTrack.getSettings();\r\n\t\t\tconsole.log(capabilities, settings);\r\n\t\t\ttry {\r\n\t\t\t\t// DCI 4K\r\n\t\t\t\tconst constraints = {\r\n\t\t\t\t\twidth: { ideal: 4096 },\r\n\t\t\t\t\theight: { ideal: 2160 },\r\n\t\t\t\t};\r\n\t\t\t\tawait videoTrack.applyConstraints(constraints);\r\n\t\t\t} catch (e) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// UHD\r\n\t\t\t\t\tconst constraints = {\r\n\t\t\t\t\t\twidth: { ideal: 3840 },\r\n\t\t\t\t\t\theight: { ideal: 2160 },\r\n\t\t\t\t\t};\r\n\t\t\t\t\tawait videoTrack.applyConstraints(constraints);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\t// 2K\r\n\t\t\t\t\t\tconst constraints = {\r\n\t\t\t\t\t\t\twidth: { ideal: 2048 },\r\n\t\t\t\t\t\t\theight: { ideal: 1152 },\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tawait videoTrack.applyConstraints(constraints);\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t// Full HD\r\n\t\t\t\t\t\t\tconst constraints = {\r\n\t\t\t\t\t\t\t\twidth: { ideal: 1920 },\r\n\t\t\t\t\t\t\t\theight: { ideal: 1080 },\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tawait videoTrack.applyConstraints(constraints);\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t// HD\r\n\t\t\t\t\t\t\t\tconst constraints = {\r\n\t\t\t\t\t\t\t\t\twidth: { ideal: 1280 },\r\n\t\t\t\t\t\t\t\t\theight: { ideal: 720 },\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tawait videoTrack.applyConstraints(constraints);\r\n\t\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t// HD\r\n\t\t\t\t\t\t\t\t\tconst constraints = {\r\n\t\t\t\t\t\t\t\t\t\twidth: { ideal: 640 },\r\n\t\t\t\t\t\t\t\t\t\theight: { ideal: 480 },\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\tawait videoTrack.applyConstraints(constraints);\r\n\t\t\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\t\t\talert(e);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst updatedSettings = videoTrack.getSettings();\r\n\t\t\tsetMediaSettings(updatedSettings);\r\n\t\t\treturn { stream, settings: updatedSettings };\r\n\t\t\t/* use the stream */\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t\t/* handle the error */\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(async () => {\r\n\t\tconst media = await getMedia();\r\n\t\tif (videoRef.current) {\r\n\t\t\tif ('srcObject' in videoRef.current) {\r\n\t\t\t\tvideoRef.current.srcObject = media.stream;\r\n\r\n\t\t\t\t// ctx.scale(widthRatio, heightRatio);\r\n\t\t\t} else {\r\n\t\t\t\tvideoRef.src = window.URL.createObjectURL(media.stream);\r\n\t\t\t}\r\n\r\n\t\t\t// console.log\r\n\t\t\tconst video_width = media.settings.width;\r\n\t\t\tconst video_height = media.settings.height;\r\n\t\t\tconst to_height = document.documentElement.clientHeight; //window.innerHeight;\r\n\t\t\tconst to_width = Math.floor(to_height * media.settings.aspectRatio); //906; //document.documentElement.clientWidth; //window.innerWidth;\r\n\t\t\tconst ratio = mediaSettings.aspectRatio;\r\n\t\t\tconst scaleRatioY = to_height / video_height;\r\n\t\t\tconst scaleRatioX = to_width / video_width;\r\n\t\t\tconsole.log(\"videoWrapper\",videoWrapper.current);\r\n\t\t\tvideoWrapper.current.style.width = `${to_width}px`;\r\n\t\t\tvideoWrapper.current.style.height = `${to_height}px`;\r\n\t\t\tvideoRef.current.width = video_width;\r\n\t\t\tvideoRef.current.height = video_height;\r\n\t\t\tvideoRef.current.style.transform = `scale(${scaleRatioX}, ${scaleRatioY})`;\r\n\t\t\tvideoRef.current.style.transformOrigin = 'top left';\r\n\t\t\timageCanvasRef.current.width = video_width; //media.settings.width; //window.innerWidth;\r\n\t\t\timageCanvasRef.current.height = video_height; //media.settings.height; //window.innerHeight;\r\n\t\t\timageCanvasRef.current.style.width = `${to_width}px`;\r\n\t\t\timageCanvasRef.current.style.height = `${to_height}px`;\r\n\t\t\tconst newDebugData = {\r\n\t\t\t\tvideo: `${video_width} x ${video_height}`,\r\n\t\t\t\tscale: `${scaleRatioX} x ${scaleRatioY}`,\r\n\t\t\t\tmedia: `${media.settings.width} x ${media.settings.height}`,\r\n\t\t\t\ttarget: `${to_width} x ${to_height}`,\r\n\t\t\t};\r\n\t\t\tsetDebugData(newDebugData);\r\n\t\t\t// canvasRef.current.width = video_width; //media.settings.width; //window.innerWidth;\r\n\t\t\t// canvasRef.current.height = video_height; //media.settings.height; //window.innerHeight;\r\n\t\t\t// // canvasRef.current.style.width = `${480 * media.settings.aspectRatio}px`;\r\n\t\t\t// // canvasRef.current.style.height = `${'480'}px`; //window.innerHeight;\r\n\t\t\t// // canvasRef.current.style.transform = `scale(${scaleRatioX}, ${scaleRatioY})`; //window.innerHeight;\r\n\t\t\t\r\n\t\t\t// const ctx = canvasRef.current.getContext('2d');\r\n\t\t\t// ctx.transform(scaleRatioX, 0, 0, scaleRatioY, 0, 0)\r\n\t\t\t// // ctx.scale(scaleRatioX, scaleRatioY);\r\n\t\t\t// const ctxi = imageCanvasRef.current.getContext('2d');\r\n\t\t\t// ctxi.transform(scaleRatioX, 0, 0, scaleRatioY, 0, 0);\r\n\t\t\t// // ctxi.scale(scaleRatioX, scaleRatioY);\r\n\t\t\t// const newDebugData = {\r\n\t\t\t// \tmedia: `${media.settings.width}x${media.settings.height}`,\r\n\t\t\t// \tvideo: `${media.settings.width}x${media.settings.height}`,\r\n\t\t\t// \twindow: `${window.innerWidth}x${window.innerHeight}`,\r\n\t\t\t// \ttarget: `${to_width}x${to_height}`,\r\n\t\t\t// \t// coords: `${x_of_video}x${y_of_video}`,\r\n\t\t\t// \tscale: `${scaleRatioX}:${scaleRatioY}`,\r\n\t\t\t// };\r\n\t\t\t// setDebugData(newDebugData);\r\n\r\n\t\t\t// const heightRatio = window.innerHeight / media.settings.height;\r\n\t\t\t// const widthRatio = window.innerWidth / media.settings.width;\r\n\t\t\t// const ctx = canvasRef.current.getContext('2d');\r\n\t\t}\r\n\t}, [videoRef, videoWrapper, canvasRef, imageCanvasRef]);\r\n\r\n\tconst paint = () => {\r\n\t\t// requestAnimationFrame(paint);\r\n\t\t// const ctx = canvasRef.current.getContext('2d');\r\n\t\t// // ctx.restore();\r\n\t\t// // const video_width = mediaSettings.width;\r\n\t\t// // const video_height = mediaSettings.height;\r\n\t\t// // const to_height = document.documentElement.clientHeight; //window.innerHeight;\r\n\t\t// // const to_wdth = to_height * mediaSettings.aspectRatio; //document.documentElement.clientWidth; //window.innerWidth;\r\n\t\t// // const ratio = mediaSettings.aspectRatio;\r\n\t\t// // const scaleRatioX = to_wdth / video_width;\r\n\t\t// // const scaleRatioY = to_height / video_height;\r\n\t\t// // let target_width;\r\n\t\t// // let target_height;\r\n\t\t// // let y_of_video = 0;\r\n\t\t// // let x_of_video = 0;\r\n\t\t// // if (video_width > video_height) {\r\n\t\t// // \ttarget_width = to_wdth;\r\n\t\t// // \ttarget_height = to_wdth / ratio;\r\n\t\t// // \ty_of_video = (video_height - target_height) / 2;\r\n\t\t// // \tx_of_video = (video_width - target_width) / 2;\r\n\t\t// // } else {\r\n\t\t// // \ttarget_width = to_height;\r\n\t\t// // \ttarget_height = to_height * ratio;\r\n\t\t// // \tx_of_video = (video_height - target_height) / 2;\r\n\t\t// // \ty_of_video = (video_width - target_width) / 2;\r\n\t\t// // }\r\n\r\n\t\t// // ctx.scale(scaleRatioX, scaleRatioY);\r\n\t\t// requestAnimationFrame(() => ctx.drawImage(videoRef.current, 0, 0));\r\n\t\t// const newDebugData = {\r\n\t\t// \tmedia: `${mediaSettings.width}x${mediaSettings.height}`,\r\n\t\t// \tvideo: `${mediaSettings.width}x${mediaSettings.height}`,\r\n\t\t// \twindow: `${window.innerWidth}x${window.innerHeight}`,\r\n\t\t// \ttarget: `${to_wdth}x${to_height}`,\r\n\t\t// \t// coords: `${x_of_video}x${y_of_video}`,\r\n\t\t// \tscale: `${scaleRatioX}:${scaleRatioY}`,\r\n\t\t// };\r\n\t\t// setDebugData(newDebugData);\r\n\t\t// requestAnimationFrame(() => ctx.scale(scaleRatioX, scaleRatioY));\r\n\t\t// requestAnimationFrame(() => ctx.restore());\r\n\t\t// ctx.scale(scaleRatioX, scaleRatioY);\r\n\t};\r\n\tconst metaDataLoadHandle = (e) => {\r\n\t\t// alert(`${mediaSettings.width}x${mediaSettings.height}`);\r\n\r\n\t\t// paint();\r\n\t\t// setDebugData(newDebugData);\r\n\t\t// setInterval(() => {\r\n\t\t// \t// console.log(videoRef.current.videoWidth, videoRef.current.videoWidth, window.innerWidth, window.innerHeight);\r\n\r\n\t\t// \t// requestAnimationFrame(() => ctx.drawImage(videoRef.current, x_of_video, y_of_video));\r\n\r\n\t\t// \t// ctx.drawImage(\r\n\t\t// \t// \tvideoRef.current,\r\n\t\t// \t// \t0,\r\n\t\t// \t// \t0,\r\n\t\t// \t// \tvideoRef.current.videoWidth,\r\n\t\t// \t// \tvideoRef.current.videoWidth,\r\n\t\t// \t// \t0,\r\n\t\t// \t// \t0,\r\n\t\t// \t// \twindow.innerWidth,\r\n\t\t// \t// \twindow.innerHeight,\r\n\t\t// \t// );\r\n\t\t// }, 30);\r\n\t\t// ctx.drawImage(videoRef.current, 0, 0, mediaSettings.width, mediaSettings.height);\r\n\t};\r\n\r\n\tconst captureImage = () => {\r\n\t\tconst ctx = imageCanvasRef.current.getContext('2d');\r\n\r\n\t\t\t// ctx.scale(scaleRatioX, scaleRatioY);\r\n\t\tctx.drawImage(videoRef.current, 0, 0);\r\n\r\n\t\tconst url = imageCanvasRef.current.toDataURL('image/png');\r\n\t\t// photo.current.setAttribute('src', url);\r\n\t\tdownloadAnchor.current.href = url;\r\n\t\tdownloadAnchor.current.download = 'MyPhoto.png';\r\n\t\tdownloadAnchor.current.click();\r\n\t\t//\r\n\t\twindow.URL.revokeObjectURL(url);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{debug && (\r\n\t\t\t\t<div id='debug'>\r\n\t\t\t\t\t<DebugData debugData={debugData} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<div ref={videoWrapper} style={{ marginBottom: '16px' }}>\r\n\t\t\t\t<video\r\n\t\t\t\t\tref={videoRef}\r\n\t\t\t\t\tautoPlay\r\n\t\t\t\t\tplaysInline\r\n\t\t\t\t\tonLoadedMetadata={metaDataLoadHandle}\r\n\t\t\t\t\t// style={{ display: 'none' }}\r\n\t\t\t\t></video>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<canvas ref={canvasRef} style={{ border: 'solid 2px red', display: 'none' }}></canvas>\r\n\t\t\t\t<canvas ref={imageCanvasRef} style={{ border: 'solid 2px red', display: 'none' }}></canvas>\r\n\t\t\t</div>\r\n\t\t\t<a id='downloadAnchor' href='http://chetandr.github.com' ref={downloadAnchor} style={{ display: 'none' }}>\r\n\t\t\t\timage\r\n\t\t\t</a>\r\n\t\t\t<div id='changeVideo'>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\taria-label='upload picture'\r\n\t\t\t\t\tcomponent='span'\r\n\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t// ref={snap}\r\n\t\t\t\t\tonClick={captureImage}\r\n\t\t\t\t>\r\n\t\t\t\t\t<PhotoCamera style={{ fontSize: 100 }} />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div>\r\n\t\t\t{/* <div id='additionalButtons'>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tcolor='secondary'\r\n\t\t\t\t\taria-label='upload picture'\r\n\t\t\t\t\tcomponent='span'\r\n\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\tref={snap}\r\n\t\t\t\t\tonClick={addBBox}\r\n\t\t\t\t\tdisabled={bboxCount >= allowedBBoxes}\r\n\t\t\t\t>\r\n\t\t\t\t\t<SettingsOverscanIcon style={{ fontSize: 100 }} />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div> */}\r\n\t\t\t<a id='downloadAnchor' href='http://chetandr.github.com' ref={downloadAnchor} style={{ display: 'none' }}>\r\n\t\t\t\timage\r\n\t\t\t</a>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MediaStream;\r\n","import './App.css';\n\nimport { Route, Switch, useLocation, useParams } from 'react-router-dom';\n\nimport { DndProvider } from 'react-dnd';\n// import Hierarchy from './components/Hierarchy';\nimport MediaStream from './components/MediaStream';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { TouchBackend } from 'react-dnd-touch-backend';\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path='/'>\n\t\t\t\t\t<div className='App'>\n\t\t\t\t\t\t<header className='App-header'>\n\t\t\t\t\t\t\t<DndProvider backend={TouchBackend} options={{ enableMouseEvents: true }}>\n\t\t\t\t\t\t\t\t<MediaStream />\n\t\t\t\t\t\t\t</DndProvider>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t</div>\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t\t{/* <Switch>\n\t\t\t\t<Route path='/hierarchy' exact>\n\t\t\t\t\t<Hierarchy />\n\t\t\t\t</Route>\n\t\t\t</Switch> */}\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\r\n\r\nimport App from './App';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}