{"version":3,"sources":["components/Hierarchy/index.jsx","components/MediaStream/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","data","map","item","className","name","children","length","Chart","useState","setemps","txt","useRef","console","log","ref","Button","onClick","current","value","split","employees","employeeChart","mapping","employee","emp","manager","hasOwnProperty","push","MediaStream","videoRef","React","canvasRef","imageCanvasRef","downloadAnchor","mediaSettings","setMediaSettings","getMedia","a","stream","navigator","mediaDevices","getUserMedia","audio","video","facingMode","exact","getVideoTracks","videoTracks","videoTrack","capabilities","getCapabilities","settings","getSettings","constraints","width","ideal","max","height","applyConstraints","alert","updatedSettings","error","useEffect","media","srcObject","src","window","URL","createObjectURL","innerWidth","innerHeight","style","paint","requestAnimationFrame","target_width","target_height","ctx","getContext","video_width","video_height","ratio","y_of_video","x_of_video","drawImage","marginBottom","display","autoPlay","playsInline","onLoadedMetadata","e","videoWidth","availWidth","availHeight","border","id","href","IconButton","color","aria-label","component","variant","url","toDataURL","download","click","revokeObjectURL","fontSize","App","path","DndProvider","backend","TouchBackend","options","enableMouseEvents","Hierarchy","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5127ed2c.chunk.js","sourcesContent":["import React, { Fragment, useRef, useState } from 'react';\r\n\r\nimport { Button } from '@material-ui/core';\r\nimport data from './data.json';\r\nimport { grey } from '@material-ui/core/colors';\r\n\r\n// import randomcolor from \"randomcolo?r\";\r\nconst csvData = '';\r\n\r\nconst Card = (props) => {\r\n\treturn (\r\n\t\t<ul>\r\n\t\t\t{props.data.map((item) => (\r\n\t\t\t\t<Fragment key={item.name}>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<div className='card'>\r\n\t\t\t\t\t\t\t<div className='card-body'>\r\n\t\t\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t\t\t\t{/* <h4>{faker.name.findName()}</h4>\r\n                <p>{faker.name.jobTitle()}</p> */}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{item.children?.length && <Card data={item.children} />}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</Fragment>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nconst Chart = () => {\r\n\tconst [emps, setemps] = useState([]);\r\n\tconst txt = useRef();\r\n\tconst updateTxt = () => {\r\n\t\tsetemps(txt.current.value);\r\n\t\tconsole.log(txt.current.value.split('\\n'));\r\n\t\tconst employees = txt.current.value.split('\\n');\r\n\t\tconst employeeChart = {};\r\n\t\tconst mapping = { name: 1, designation: 2, manager: 3 };\r\n\t\tconst h = {};\r\n        employees.map((employee) => {\r\n\t\t\tconst emp = employee.split(',');\r\n            const manager = emp[mapping.manager] ? emp[mapping.manager] : \"root\";\r\n\t\t\tif (employeeChart.hasOwnProperty(manager)) {\r\n\t\t\t\temployeeChart[manager].children.push(emp[mapping.name]);\r\n\t\t\t} else {\r\n\t\t\t\temployeeChart[manager] = { children: [emp[mapping.name]] };\r\n\t\t\t}\r\n\t\t});\r\n        // for(let k in employeeChart) {\r\n        //     employeeChart[k].children.map(ec => {\r\n        //         h[k]\r\n        //     })\r\n        // }\r\n        \r\n\t\tconsole.log(employeeChart);\r\n\t};\r\n\tconsole.log();\r\n\treturn (\r\n\t\t<div className='org-tree'>\r\n\t\t\t<textarea ref={txt}>\r\n\t\t\t</textarea>\r\n\t\t\t<Button onClick={updateTxt}>Update</Button>\r\n\t\t\t<Card data={data} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useCallback, useEffect } from 'react';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport SettingsOverscanIcon from '@material-ui/icons/SettingsOverscan';\r\n\r\nconst DebugData = (props) => {\r\n\tconst components = [];\r\n\tif (props.debugData) {\r\n\t\tfor (let key in props.debugData) {\r\n\t\t\tcomponents.push(\r\n\t\t\t\t<div className='debugRow'>\r\n\t\t\t\t\t<span className='debugLabel'>{key} : </span>\r\n\t\t\t\t\t<span className='debugValue'>{props.debugData[key]}</span>\r\n\t\t\t\t</div>,\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\treturn components;\r\n};\r\n\r\nconst MediaStream = () => {\r\n\tconst debug = false;\r\n\tconst videoRef = React.useRef();\r\n\tconst canvasRef = React.useRef();\r\n\tconst imageCanvasRef = React.useRef();\r\n\r\n\tconst downloadAnchor = React.useRef();\r\n\tconst [mediaSettings, setMediaSettings] = React.useState({});\r\n\tconst [debugData, setDebugData] = React.useState({});\r\n\r\n\tasync function getMedia() {\r\n\t\tlet stream = null;\r\n\r\n\t\ttry {\r\n\t\t\ttry {\r\n\t\t\t\tstream = await navigator.mediaDevices.getUserMedia({\r\n\t\t\t\t\taudio: false,\r\n\t\t\t\t\tvideo: { facingMode: { exact: 'environment' } },\r\n\t\t\t\t});\r\n\t\t\t} catch (err) {\r\n\t\t\t\tstream = await navigator.mediaDevices.getUserMedia({\r\n\t\t\t\t\taudio: false,\r\n\t\t\t\t\tvideo: { facingMode: { exact: 'user' } },\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tconst videoTracks = await stream.getVideoTracks();\r\n\t\t\tconst videoTrack = videoTracks[0];\r\n\t\t\tconst capabilities = videoTracks[0].getCapabilities();\r\n\t\t\tconst settings = videoTrack.getSettings();\r\n\t\t\tconsole.log(capabilities, settings);\r\n\t\t\tconst constraints = {\r\n\t\t\t\twidth: { ideal: capabilities.width.max },\r\n\t\t\t\theight: { ideal: capabilities.height.max },\r\n\t\t\t};\r\n\t\t\ttry {\r\n\t\t\t\tawait videoTrack.applyConstraints(constraints);\r\n\t\t\t} catch (e) {\r\n\t\t\t\talert(e);\r\n\t\t\t}\r\n\t\t\tconst updatedSettings = videoTrack.getSettings();\r\n\t\t\tsetMediaSettings(updatedSettings);\r\n\t\t\treturn { stream, settings: updatedSettings };\r\n\t\t\t/* use the stream */\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t\t/* handle the error */\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(async () => {\r\n\t\tconst media = await getMedia();\r\n\t\tif (videoRef.current) {\r\n\t\t\tif ('srcObject' in videoRef.current) {\r\n\t\t\t\tvideoRef.current.srcObject = media.stream;\r\n\r\n\t\t\t\t// ctx.scale(widthRatio, heightRatio);\r\n\t\t\t} else {\r\n\t\t\t\tvideoRef.src = window.URL.createObjectURL(media.stream);\r\n\t\t\t}\r\n\t\t\t// videoRef.current.width = media.settings.width;\r\n\t\t\t// videoRef.current.height = media.settings.height;\r\n\t\t\tcanvasRef.current.width = window.innerWidth; //media.settings.width; //window.innerWidth;\r\n\t\t\tcanvasRef.current.height = window.innerHeight; //media.settings.height; //window.innerHeight;\r\n\t\t\tcanvasRef.current.style.width = `${window.innerWidth}px`;\r\n\t\t\tcanvasRef.current.style.height = `${window.innerHeight}px`; //window.innerHeight;\r\n\t\t\timageCanvasRef.current.width = window.innerWidth; //media.settings.width; //window.innerWidth;\r\n\t\t\timageCanvasRef.current.height = window.innerHeight; //media.settings.height; //window.innerHeight;\r\n\t\t\timageCanvasRef.current.style.width = `${window.innerWidth}px`;\r\n\t\t\timageCanvasRef.current.style.height = `${window.innerHeight}px`;\r\n\t\t\t// const heightRatio = window.innerHeight / media.settings.height;\r\n\t\t\t// const widthRatio = window.innerWidth / media.settings.width;\r\n\t\t\t// const ctx = canvasRef.current.getContext('2d');\r\n\t\t}\r\n\t}, [videoRef, canvasRef, imageCanvasRef]);\r\n\r\n\tconst paint = () => {\r\n\t\trequestAnimationFrame(paint);\r\n\t\tconst ctx = canvasRef.current.getContext('2d');\r\n\t\tvar video_width = mediaSettings.width;\r\n\t\tvar video_height = mediaSettings.height;\r\n\t\tvar ratio = video_width / video_height;\r\n\t\tvar target_width;\r\n\t\tvar target_height;\r\n\t\tvar y_of_video = 0;\r\n\t\tvar x_of_video = 0;\r\n\t\tif (video_width > video_height) {\r\n\t\t\ttarget_width = canvasRef.current.width;\r\n\t\t\ttarget_height = canvasRef.current.width / ratio;\r\n\t\t\ty_of_video = (canvasRef.current.height - target_height) / 2;\r\n\t\t} else {\r\n\t\t\ttarget_width = canvasRef.current.height;\r\n\t\t\ttarget_height = canvasRef.current.height * ratio;\r\n\t\t\tx_of_video = (canvasRef.current.width - target_width) / 2;\r\n\t\t}\r\n\t\tctx.drawImage(videoRef.current, x_of_video, y_of_video, target_width, target_height);\r\n\t};\r\n\tconst metaDataLoadHandle = (e) => {\r\n\t\t// alert(`${mediaSettings.width}x${mediaSettings.height}`);\r\n\t\tconst newDebugData = {\r\n\t\t\tmedia: `${mediaSettings.width}x${mediaSettings.height}`,\r\n\t\t\tvideo: `${videoRef.current.videoWidth}x${videoRef.current.videoWidth}`,\r\n\t\t\tavail: `${window.availWidth}x${window.availHeight}`,\r\n\t\t\twindow: `${window.innerWidth}x${window.innerHeight}`,\r\n\t\t};\r\n\t\tpaint();\r\n\t\t// setDebugData(newDebugData);\r\n\t\t// setInterval(() => {\r\n\t\t// \t// console.log(videoRef.current.videoWidth, videoRef.current.videoWidth, window.innerWidth, window.innerHeight);\r\n\r\n\t\t// \t// requestAnimationFrame(() => ctx.drawImage(videoRef.current, x_of_video, y_of_video));\r\n\r\n\t\t// \t// ctx.drawImage(\r\n\t\t// \t// \tvideoRef.current,\r\n\t\t// \t// \t0,\r\n\t\t// \t// \t0,\r\n\t\t// \t// \tvideoRef.current.videoWidth,\r\n\t\t// \t// \tvideoRef.current.videoWidth,\r\n\t\t// \t// \t0,\r\n\t\t// \t// \t0,\r\n\t\t// \t// \twindow.innerWidth,\r\n\t\t// \t// \twindow.innerHeight,\r\n\t\t// \t// );\r\n\t\t// }, 30);\r\n\t\t// ctx.drawImage(videoRef.current, 0, 0, mediaSettings.width, mediaSettings.height);\r\n\t};\r\n\r\n\tconst captureImage = () => {\r\n\t\tconst ctx = imageCanvasRef.current.getContext('2d');\r\n\t\tvar video_width = mediaSettings.width;\r\n\t\tvar video_height = mediaSettings.height;\r\n\t\tvar ratio = video_width / video_height;\r\n\t\tvar target_width;\r\n\t\tvar target_height;\r\n\t\tvar y_of_video = 0;\r\n\t\tvar x_of_video = 0;\r\n\t\tif (video_width > video_height) {\r\n\t\t\ttarget_width = canvasRef.current.width;\r\n\t\t\ttarget_height = canvasRef.current.width / ratio;\r\n\t\t\ty_of_video = (canvasRef.current.height - target_height) / 2;\r\n\t\t} else {\r\n\t\t\ttarget_width = canvasRef.current.height;\r\n\t\t\ttarget_height = canvasRef.current.height * ratio;\r\n\t\t\tx_of_video = (canvasRef.current.width - target_width) / 2;\r\n\t\t}\r\n\t\tctx.drawImage(videoRef.current, x_of_video, y_of_video, target_width, target_height);\r\n\t\tconst url = imageCanvasRef.current.toDataURL('image/png');\r\n\t\t// photo.current.setAttribute('src', url);\r\n\t\tdownloadAnchor.current.href = url;\r\n\t\tdownloadAnchor.current.download = 'MyPhoto.png';\r\n\t\tdownloadAnchor.current.click();\r\n\t\t//\r\n\t\twindow.URL.revokeObjectURL(url);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{debug && (\r\n\t\t\t\t<div id='debug'>\r\n\t\t\t\t\t<DebugData debugData={debugData} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<div style={{ marginBottom: '16px', display: 'none' }}>\r\n\t\t\t\t<video\r\n\t\t\t\t\tref={videoRef}\r\n\t\t\t\t\tautoPlay\r\n\t\t\t\t\tplaysInline\r\n\t\t\t\t\tonLoadedMetadata={metaDataLoadHandle}\r\n\t\t\t\t\t// style={{ display: 'none' }}\r\n\t\t\t\t></video>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<canvas ref={canvasRef} style={{ border: 'solid 2px red' }}></canvas>\r\n\t\t\t\t<canvas ref={imageCanvasRef} style={{ border: 'solid 2px red' }}></canvas>\r\n\t\t\t</div>\r\n\t\t\t<a id='downloadAnchor' href='http://chetandr.github.com' ref={downloadAnchor} style={{ display: 'none' }}>\r\n\t\t\t\timage\r\n\t\t\t</a>\r\n\t\t\t<div id='changeVideo'>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\taria-label='upload picture'\r\n\t\t\t\t\tcomponent='span'\r\n\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t// ref={snap}\r\n\t\t\t\t\tonClick={captureImage}\r\n\t\t\t\t>\r\n\t\t\t\t\t<PhotoCamera style={{ fontSize: 100 }} />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div>\r\n\t\t\t{/* <div id='additionalButtons'>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tcolor='secondary'\r\n\t\t\t\t\taria-label='upload picture'\r\n\t\t\t\t\tcomponent='span'\r\n\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\tref={snap}\r\n\t\t\t\t\tonClick={addBBox}\r\n\t\t\t\t\tdisabled={bboxCount >= allowedBBoxes}\r\n\t\t\t\t>\r\n\t\t\t\t\t<SettingsOverscanIcon style={{ fontSize: 100 }} />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div> */}\r\n\t\t\t<a id='downloadAnchor' href='http://chetandr.github.com' ref={downloadAnchor} style={{ display: 'none' }}>\r\n\t\t\t\timage\r\n\t\t\t</a>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MediaStream;\r\n","import './App.css';\n\nimport { Route, Switch, useLocation, useParams } from 'react-router-dom';\n\nimport { DndProvider } from 'react-dnd';\nimport Hierarchy from './components/Hierarchy';\nimport MediaStream from './components/MediaStream';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { TouchBackend } from 'react-dnd-touch-backend';\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path='/'>\n\t\t\t\t\t<div className='App'>\n\t\t\t\t\t\t<header className='App-header'>\n\t\t\t\t\t\t\t<DndProvider backend={TouchBackend} options={{ enableMouseEvents: true }}>\n\t\t\t\t\t\t\t\t<MediaStream />\n\t\t\t\t\t\t\t</DndProvider>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t</div>\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t\t<Switch>\n\t\t\t\t<Route path='/hierarchy' exact>\n\t\t\t\t\t<Hierarchy />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\r\n\r\nimport App from './App';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}